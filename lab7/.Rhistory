library("tidyverse")
library("janitor")
install.packages("skimr")
library("skimr")
?msleep
#built in datasest, ? will give infor regarding the data set, its a help function. Omly works for built in dataset
names(msleep)
library("palmerpenguins")
msleep24 <- msleep %>%
mutate(sleep_total_24 = sleep_total/24) %>%
select(name, vore, sleep_total_24) %>%
filter(sleep_total_24 <= 0.3) %>%
arrange(desc(sleep_total_24))
msleep24 <- msleep %>%
mutate(sleep_total_24 = sleep_total/24) %>%
select(name, vore, sleep_total_24) %>%
filter(sleep_total_24 <= 0.3) %>%
arrange(desc(sleep_total_24))
msleep24
skim(msleep24)
msleep24 <- msleep %>%
mutate(sleep_total_24 = sleep_total/24) %>%
select(name, vore, sleep_total_24, sleep_total) %>%
filter(sleep_total_24 <= 0.3) %>%
arrange(desc(sleep_total_24))
msleep24
msleep24 <- msleep %>%
mutate(sleep_total_24 = sleep_total/24) %>%
select(name, vore, sleep_total_24) %>%
filter(sleep_total_24 <= 0.3) %>%
arrange(desc(sleep_total_24))
msleep24
getwd()
summary(msleep24)
skim(msleep24)
hist(msleep24$sleep_total_24)
head(msleep)
large <- msleep %>%
select(name, genus, bodywt, sleep_total) %>%
filter(bodywt > 200) %>%
arrange(desc(bodywt))
large
mean(large$sleep_total)
msleep %>%
filter(bodywt>200)
msleep %>%
filter(bodywt>200) %>%
summarize(mean_sleep_lg = mean(sleep_total))
msleep %>%
filter(bodywt <10) %>%
summarise(mean_sleep_sm = mean(sleep_total))
msleep %>%
filter(bodywt>200) %>%
summarise(mean_sleep_lg = mean(sleep_total),
min_sleep_lg = min(sleep_total),
max_sleep_lg = max(sleep_total),
sd_sleep_lg = sd(sleep_total),
total = n())
names(msleep)
View(msleep24)
msleep <- msleep
View(msleep)
names(msleep)
msleep %>%
filter(order =="Primates")
msleep %>%
filter(order =="Primates") %>%
summarise(mean_primate = mean(bodywt),
max_primate = max(bodywt),
min_primate = min(bodywt),
total = n())
msleep %>%
filter(order =="Primates") %>%
summarise(mean_bodywt = mean(bodywt),
max_bodywt = max(bodywt),
min_bodywt = min(bodywt),
total = n())
msleep %>%
filter(bodywt > 100)
msleep %>%
summarise(n_genera = n_distinct(genus)) #this counts the number of genera in msleep
msleep %>%
summarise(mean_sleep_tot = mean(sleep_total),
min_sleep_tot = min(sleep_total),
max_sleep_tot = max(sleep_total),
total = n())
msleep %>%
group_by(vore) %>% #we are grouping by feeding ecology, a categorical variable
summarize(min_bodywt = min(bodywt),
max_bodywt = max(bodywt),
mean_bodywt = mean(bodywt),
total=n())
View(msleep)
msleep %>%
group_by(order) %>%
summarise(mean_brain_wt = mean(brainwt))
msleep %>%
group_by(order) %>%
summarise(mean_brain_wt = mean(brainwt),
total = n())
msleep %>%
filter(order == "Carnivora") %>%
select(order, genus, brainwt)
msleep %>%
group_by(order) %>%
summarise(mean_brain_wt = mean(brainwt, na.rm = T))
msleep %>%
filter(order == "Cetacea") %>%
select(order, genus, brainwt)
library("tidyverse")
library("janitor")
library("skimr")
library("palmerpenguins")
glimpse(penguins)
names(penguins)
levels(penguins$island)
penguins %>%
group_by(island) %>%
summarise(mean_bill_length = mean(bill_length_mm),
min_bil_length = min(bill_length_mm),
max_bill_length = max(bill_length_mm),
total = n()))
penguins %>%
group_by(island) %>%
summarise(mean_bill_length = mean(bill_length_mm),
min_bil_length = min(bill_length_mm),
max_bill_length = max(bill_length_mm),
total = n())
penguins %>%
group_by(island) %>%
summarise(mean_bill_length = mean(bill_length_mm, na.rm = T),
min_bil_length = min(bill_length_mm, na.rm = T),
max_bill_length = max(bill_length_mm, na.rm = T),
total = n())
penguins %>%
group_by(island) %>%
summarise(mean_body_mass = mean(body_mass_g),
n = n())
penguins %>%
group_by(island) %>%
summarise(number_NAs= sum(is.na(body_mass_g)))
penguins %>%
filter(!is.na(body_mass_g)) %>% #pull out all of the observations with a number
group_by(island) %>%
summarise(mean_body_mass = mean(body_mass_g))
penguins %>%
filter(!is.na(body_mass_g)) %>% #pull out all of the observations with a number
group_by(island) %>%
summarise(mean_body_mass = mean(body_mass_g),
total = n())
penguins %>%
group_by(species, island) %>%
summarize(n=n(), .groups= 'keep')#the .groups argument here just prevents a warning message
penguins %>%
count(island, sort = T) #sort=T sorts the column in descending order
penguins %>%
group_by(island) %>%
summarize(n=n())
penguins %>%
count(island)
penguins %>%
count(island, species, sort = T) # sort=T will arrange in descending order
penguins %>%
count(island, species) # sort=T will arrange in descending order
penguins %>%
count(island, species, sort = T) # sort=T will arrange in descending order
tabyl(island, species)
tabyl(island, species)
penguins %>%
tabyl(island, species)
penguins %>%
tabyl(island, species)
penguins %>%
group_by(species) %>%
summarise(mean_bill_length = mean(bill_length_mm))
penguins %>%
group_by(species) %>%
summarise(mean_bill_length = mean(bill_length_mm),
total = n())
penguins %>%
group_by(species) %>%
summarise(mean_bill_length = mean(bill_length_mm, na.rm = T),
total = n())
names(penguins)
penguins %>%
filter(is.na(sex)) %>%
count(island, species)
penguins %>%
tabyl(island, species)
penguins %>%
count(sex, island)
penguins %>%
summarize(distinct_species = n_distinct(species),
distinct_island = n_distinct(island),
distinct_sex = n_distinct(sex))
penguins %>%
summarize(across(c(species, island, sex), n_distinct))
penguins %>%
summarize(across(contains("mm"), mean, na.rm=T))
penguins %>%
summarize(across(contains("mm"), \(x) mean(x, na.rm = TRUE)))
